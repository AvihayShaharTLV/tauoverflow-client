{"ast":null,"code":"import { getAllSolutionsQuery, getAllTestDiscussionsQuery } from '../Queries/testQueries';\nimport { getAllTestDiscussionsCommentsQuery } from '../Queries/testQueries';\nimport { updateTestNumQuestionsQuery } from '../Queries/testQueries';\nimport { getTestNumQuestionsQuery } from '../Queries/testQueries';\nimport { createTestQuery } from '../Queries/testQueries';\nimport { createExamQuery } from '../Queries/testQueries';\nimport { createSolutionQuery, getAllExamsQuery } from '../Queries/testQueries';\nimport { getAllTestsQuery } from '../Queries/testQueries';\nimport axios from 'axios'; // Test functions\n\nexport const getAllTestDiscussions = () => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: getAllTestDiscussionsQuery,\n    variables: {}\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const getAllTestDiscussionsComments = () => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: getAllTestDiscussionsCommentsQuery,\n    variables: {}\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const getTestNumQuestions = () => {\n  axios.post('http://localhost:5000/graphql', {\n    query: getTestNumQuestionsQuery,\n    variables: {}\n  }).then(function (response) {\n    console.log(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const updateTestNumQuestions = userData => {\n  axios.post('http://localhost:5000/graphql', {\n    query: updateTestNumQuestionsQuery,\n    variables: { ...userData\n    }\n  }).then(function (response) {\n    console.log(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const createTest = object => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: createTestQuery,\n    variables: object\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const createExam = object => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: createExamQuery,\n    variables: object\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const getAllExams = () => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: getAllExamsQuery,\n    variables: {}\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const getAllSolutions = () => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: getAllSolutionsQuery,\n    variables: {}\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const createSolution = object => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: createSolutionQuery,\n    variables: object\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const getAllTests = () => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: getAllTestsQuery,\n    variables: {}\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["C:/Users/avikef/Desktop/New folder (12)/tauoverflow-client/src/API/testApi.js"],"names":["getAllSolutionsQuery","getAllTestDiscussionsQuery","getAllTestDiscussionsCommentsQuery","updateTestNumQuestionsQuery","getTestNumQuestionsQuery","createTestQuery","createExamQuery","createSolutionQuery","getAllExamsQuery","getAllTestsQuery","axios","getAllTestDiscussions","post","query","variables","then","response","catch","error","console","log","getAllTestDiscussionsComments","getTestNumQuestions","updateTestNumQuestions","userData","createTest","object","createExam","getAllExams","getAllSolutions","createSolution","getAllTests"],"mappings":"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","sourcesContent":["import { getAllSolutionsQuery, getAllTestDiscussionsQuery } from '../Queries/testQueries'\nimport { getAllTestDiscussionsCommentsQuery } from '../Queries/testQueries'\nimport { updateTestNumQuestionsQuery } from '../Queries/testQueries'\nimport { getTestNumQuestionsQuery } from '../Queries/testQueries'\nimport { createTestQuery } from '../Queries/testQueries'\nimport { createExamQuery } from '../Queries/testQueries'\nimport { createSolutionQuery, getAllExamsQuery } from '../Queries/testQueries'\nimport { getAllTestsQuery } from '../Queries/testQueries'\n\nimport axios from 'axios'\n\n// Test functions\nexport const getAllTestDiscussions = () => {\n  return axios.post('http://localhost:5000/graphql', {\n      query: getAllTestDiscussionsQuery,\n      variables: {}\n    })\n    .then(function (response) {\n       return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const getAllTestDiscussionsComments = () => {\n  return axios.post('http://localhost:5000/graphql', {\n      query: getAllTestDiscussionsCommentsQuery,\n      variables: {}\n    })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const getTestNumQuestions = () => {\n  axios.post('http://localhost:5000/graphql', {\n      query: getTestNumQuestionsQuery,\n      variables: {}\n    })\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const updateTestNumQuestions = (userData) => {\n  axios.post('http://localhost:5000/graphql', {\n      query: updateTestNumQuestionsQuery,\n      variables: {...userData}\n    })\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const createTest = (object) => {\n  return axios.post('http://localhost:5000/graphql', {\n      query: createTestQuery,\n      variables: object\n    })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const createExam = (object) => {\n  return axios.post('http://localhost:5000/graphql', {\n      query: createExamQuery,\n      variables: object,\n    })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const getAllExams = () => {\n  return axios.post('http://localhost:5000/graphql', {\n      query: getAllExamsQuery,\n      variables: {}\n    })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const getAllSolutions = () => {\n  return axios.post('http://localhost:5000/graphql', {\n      query: getAllSolutionsQuery,\n      variables: {}\n    })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\n\nexport const createSolution = (object) => {\n  return axios.post('http://localhost:5000/graphql', {\n      query: createSolutionQuery,\n      variables: object,\n    })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const getAllTests = () => {\n  return axios.post('http://localhost:5000/graphql', {\n      query: getAllTestsQuery,\n      variables: {}\n    })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}"]},"metadata":{},"sourceType":"module"}