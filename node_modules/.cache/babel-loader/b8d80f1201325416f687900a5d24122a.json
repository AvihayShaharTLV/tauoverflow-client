{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avikef\\\\Desktop\\\\New folder (10)\\\\src\\\\components\\\\discussions\\\\Discussion.js\",\n    _s = $RefreshSig$();\n\nimport H3 from \"../../general-components/H3\";\nimport { ThumbUpIcon } from '@heroicons/react/outline';\nimport { PaperAirplaneIcon, PaperClipIcon, XIcon } from '@heroicons/react/solid';\nimport TextArea from '../../general-components/TextArea';\nimport { useState, useEffect, useRef } from \"react\";\nimport { createCourseComment } from \"../../API/commentApi\";\nimport { createTestComment } from '../../API/commentApi';\nimport { getAllCourseDiscussionComments } from \"../../API/courseApi\";\nimport { getAllTestDiscussionsComments } from '../../API/testApi';\nimport Comments from \"./Comments\";\nimport { useParams } from \"react-router\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { getAllUsers } from '../../API/usersApi';\nimport { createQuestionComment } from \"../../API/commentApi\";\nimport { getAllQuestionDiscussionsComments } from \"../../API/questionApi\";\nimport { uploadToS3 } from \"../../s3-methods/uploadFile\";\nimport ReactTooltip from \"react-tooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Discussion = _ref => {\n  _s();\n\n  let {\n    setSelectedDiscussion,\n    selectedDiscussion,\n    type\n  } = _ref;\n  const {\n    user,\n    isLoading\n  } = useAuth0();\n  const [description, setDescription] = useState('');\n  const [commentsChanged, setCommentsChanged] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isImageDisplayed, setIsImageDisplayed] = useState(null);\n  const onScreenClick = useRef(null);\n  const IDs = useParams();\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await getAllUsers();\n        setUsers(response.data.data.allUsers.nodes);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n\n  const addAttachment = e => {\n    let file = e.target.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    setSelectedFile(file);\n\n    reader.onload = e => {\n      setPreviewUrl(e.target.result);\n    };\n  };\n\n  const pushComment = async () => {\n    try {\n      let response;\n      if (description.trim() === '') return;\n\n      switch (type) {\n        case 'course':\n          response = await createCourseComment({\n            \"uid\": user.sub.split('|')[1],\n            \"cid\": selectedDiscussion[0].cid.trim(),\n            \"did\": selectedDiscussion[0].id,\n            \"body\": description.trim(),\n            \"attachment\": previewUrl ? await uploadToS3(selectedFile, 'image') : null\n          });\n          break;\n\n        case 'exam':\n          response = await createTestComment({\n            \"uid\": user.sub.split('|')[1],\n            \"did\": parseInt(selectedDiscussion[0].id),\n            \"tid\": parseInt(IDs.examID),\n            \"cid\": IDs.courseID,\n            \"body\": description.trim(),\n            \"attachment\": previewUrl ? await uploadToS3(selectedFile, 'image') : null\n          });\n          break;\n\n        case 'question':\n          response = await createQuestionComment({\n            \"uid\": user.sub.split('|')[1],\n            \"did\": parseInt(selectedDiscussion[0].id),\n            \"body\": description.trim(),\n            \"attachment\": previewUrl ? await uploadToS3(selectedFile, 'image') : null\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      if (response.status === 200 && !response.data.errors) {\n        setDescription('');\n        setSelectedFile(null);\n        setPreviewUrl(null);\n        setCommentsChanged(!commentsChanged);\n      } else if (response.status === 400) {\n        alert('לא הצלחתי להוסיף את התגובה שלך. אנא נסה שוב!');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (!selectedDiscussion) return;\n        let response,\n            currentComments = [];\n\n        switch (type) {\n          case 'course':\n            response = await getAllCourseDiscussionComments();\n            currentComments = response.data.data.allCourseComments.nodes.filter(a_comment => {\n              var _selectedDiscussion$;\n\n              return a_comment.did === ((_selectedDiscussion$ = selectedDiscussion[0]) === null || _selectedDiscussion$ === void 0 ? void 0 : _selectedDiscussion$.id);\n            });\n            break;\n\n          case 'exam':\n            response = await getAllTestDiscussionsComments();\n            currentComments = response.data.data.allTestComments.nodes.filter(a_comment => {\n              var _selectedDiscussion$2;\n\n              return (a_comment === null || a_comment === void 0 ? void 0 : a_comment.did) === ((_selectedDiscussion$2 = selectedDiscussion[0]) === null || _selectedDiscussion$2 === void 0 ? void 0 : _selectedDiscussion$2.id) && parseInt(a_comment === null || a_comment === void 0 ? void 0 : a_comment.tid) === parseInt(IDs.examID);\n            });\n            break;\n\n          case 'question':\n            response = await getAllQuestionDiscussionsComments();\n            currentComments = response.data.data.allQuestionComments.nodes.filter(a_comment => {\n              var _selectedDiscussion$3;\n\n              return (a_comment === null || a_comment === void 0 ? void 0 : a_comment.did) === ((_selectedDiscussion$3 = selectedDiscussion[0]) === null || _selectedDiscussion$3 === void 0 ? void 0 : _selectedDiscussion$3.id);\n            });\n            break;\n\n          default:\n            break;\n        }\n\n        setComments(currentComments);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [commentsChanged, selectedDiscussion]);\n\n  const checkUserName = id => {\n    let userName;\n\n    if (!isLoading) {\n      users.forEach(user => {\n        if (user.id === id) userName = `${user.firstname}_${user.lastname}`;\n      });\n      return userName;\n    }\n  };\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (onScreenClick.current && !onScreenClick.current.contains(event.target)) {\n        setIsImageDisplayed(null);\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [onScreenClick]);\n\n  const dateToString = date => {\n    const [year, month, day] = date.split('-');\n    console.log(year, month, day);\n    return `${day}/${month}/${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: onScreenClick,\n    children: [isImageDisplayed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex z-50  flex-col items-center w-screen h-screen fixed top-0 left-0 justify-center \",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"h-screen p-10 object-contain \",\n        src: isImageDisplayed,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative  dark:text-white w-full dark:bg-gray-900 dark:bg-opacity-20 \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dark:bg-transparent mb-3 py-3 px-5 rounded-t-xl bg-purple-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold\",\n          children: selectedDiscussion[1] + \". \" + selectedDiscussion[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setSelectedDiscussion(null),\n          className: \"text-center absolute -top-3 text-white -left-3 w-8 h-8 bg-indigo-600 hover:bg-indigo-700 rounded-full text-xl cursor-pointer\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" flex flex-col justify-center \",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-right mt-3 break-words\",\n            children: selectedDiscussion[0].body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), selectedDiscussion[0].attachment && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"object-contain rounded-xl cursor-pointer w-44 m-3 shadow\",\n            onClick: () => setIsImageDisplayed(selectedDiscussion[0].attachment),\n            src: selectedDiscussion[0].attachment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-around items-center mt-7\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            dir: \"ltr\",\n            className: \"text-sm font-semibold\",\n            children: [\"@\", checkUserName(selectedDiscussion[0].uid)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mx-2 text-sm\",\n              children: dateToString(selectedDiscussion[0].createdAt.split(\"T\")[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        onScreenClick: onScreenClick,\n        setIsImageDisplayed: setIsImageDisplayed,\n        comments: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-1 flex w-full px-2 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" \",\n          children: !previewUrl ? /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"relative cursor-pointer dark:bg-gray-800 rounded-md font-medium text-indigo-600 hover:text-indigo-500 \",\n            children: [/*#__PURE__*/_jsxDEV(PaperClipIcon, {\n              \"data-tip\": true,\n              \"data-for\": \"attachmentTip\",\n              className: \"h-8 w-8  cursor-pointer text-indigo-600 hover:text-indigo-700\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n              id: \"attachmentTip\",\n              className: \"text-center\",\n              place: \"bottom\",\n              effect: \"solid\",\n              children: \"\\u05E6\\u05E8\\u05E3 \\u05EA\\u05DE\\u05D5\\u05E0\\u05D4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"file-upload\",\n              name: \"file-upload\",\n              type: \"file\",\n              className: \"sr-only\",\n              onChange: e => addAttachment(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative flex justify-center items-center w-24 h-24\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"object-contain shadow rounded-xl\",\n              src: previewUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(XIcon, {\n              className: \"absolute top-3 right-0 transform dark:text-gray-400 dark:bg-gray-800 translate-x-1/2 -translate-y-1/2 h-6 w-6 bg-gray-200 text-indigo-600 hover:text-indigo-500 cursor-pointer border-dashed border-2 border-gray-400 rounded-full p-1\",\n              onClick: () => {\n                setPreviewUrl(null);\n                setSelectedFile(null);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          text: 'נו תגיב משהו:',\n          description: description,\n          setDescription: setDescription,\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n            className: \"h-9 w-9 cursor-pointer transform -rotate-90 text-indigo-600 hover:text-indigo-700\",\n            onClick: () => pushComment()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Discussion, \"EuXFm4dlRKmztWaos+4iNTitSus=\", false, function () {\n  return [useAuth0, useParams];\n});\n\n_c = Discussion;\nexport default Discussion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Discussion\");","map":{"version":3,"sources":["C:/Users/avikef/Desktop/New folder (10)/src/components/discussions/Discussion.js"],"names":["H3","ThumbUpIcon","PaperAirplaneIcon","PaperClipIcon","XIcon","TextArea","useState","useEffect","useRef","createCourseComment","createTestComment","getAllCourseDiscussionComments","getAllTestDiscussionsComments","Comments","useParams","useAuth0","getAllUsers","createQuestionComment","getAllQuestionDiscussionsComments","uploadToS3","ReactTooltip","Discussion","setSelectedDiscussion","selectedDiscussion","type","user","isLoading","description","setDescription","commentsChanged","setCommentsChanged","comments","setComments","users","setUsers","previewUrl","setPreviewUrl","selectedFile","setSelectedFile","isImageDisplayed","setIsImageDisplayed","onScreenClick","IDs","response","data","allUsers","nodes","error","console","log","addAttachment","e","file","target","files","reader","FileReader","readAsDataURL","onload","result","pushComment","trim","sub","split","cid","id","parseInt","examID","courseID","status","errors","alert","currentComments","allCourseComments","filter","a_comment","did","allTestComments","tid","allQuestionComments","checkUserName","userName","forEach","firstname","lastname","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","dateToString","date","year","month","day","title","body","attachment","uid","createdAt"],"mappings":"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","sourcesContent":["import H3 from \"../../general-components/H3\";\nimport { ThumbUpIcon } from '@heroicons/react/outline';\nimport { PaperAirplaneIcon, PaperClipIcon, XIcon } from '@heroicons/react/solid';\nimport TextArea from '../../general-components/TextArea';\nimport { useState, useEffect, useRef } from \"react\";\nimport { createCourseComment } from \"../../API/commentApi\";\nimport { createTestComment } from '../../API/commentApi';\nimport { getAllCourseDiscussionComments } from \"../../API/courseApi\";\nimport { getAllTestDiscussionsComments } from '../../API/testApi';\nimport Comments from \"./Comments\";\nimport { useParams } from \"react-router\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { getAllUsers } from '../../API/usersApi';\nimport { createQuestionComment } from \"../../API/commentApi\";\nimport { getAllQuestionDiscussionsComments } from \"../../API/questionApi\";\nimport { uploadToS3 } from \"../../s3-methods/uploadFile\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst Discussion = ({ setSelectedDiscussion, selectedDiscussion, type }) => {\n\n    const { user, isLoading } = useAuth0();\n    const [description, setDescription] = useState('');\n    const [commentsChanged, setCommentsChanged] = useState(false);\n    const [comments, setComments] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [previewUrl, setPreviewUrl] = useState(null);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [isImageDisplayed, setIsImageDisplayed] = useState(null);\n    const onScreenClick = useRef(null);\n    const IDs = useParams();\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const response = await getAllUsers();\n                setUsers(response.data.data.allUsers.nodes);\n            }\n            catch (error) {\n                console.log(error);\n            }\n        })();\n    }, [])\n    const addAttachment = (e) => {\n        let file = e.target.files[0];\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        setSelectedFile(file);\n        reader.onload = e => {\n            setPreviewUrl(e.target.result);\n        };\n    }\n    const pushComment = async () => {\n        try {\n            let response;\n            if (description.trim() === '') return;\n            switch (type) {\n                case 'course':\n                    response = await createCourseComment({\n                        \"uid\": user.sub.split('|')[1],\n                        \"cid\": selectedDiscussion[0].cid.trim(),\n                        \"did\": selectedDiscussion[0].id,\n                        \"body\": description.trim(),\n                        \"attachment\": previewUrl ? await uploadToS3(selectedFile, 'image') : null\n                    });\n                    break;\n\n                case 'exam':\n                    response = await createTestComment({\n                        \"uid\": user.sub.split('|')[1],\n                        \"did\": parseInt(selectedDiscussion[0].id),\n                        \"tid\": parseInt(IDs.examID),\n                        \"cid\": IDs.courseID,\n                        \"body\": description.trim(),\n                        \"attachment\": previewUrl ? await uploadToS3(selectedFile, 'image') : null\n                    })\n                    break;\n\n                case 'question':\n                    response = await createQuestionComment({\n                        \"uid\": user.sub.split('|')[1],\n                        \"did\": parseInt(selectedDiscussion[0].id),\n                        \"body\": description.trim(),\n                        \"attachment\": previewUrl ? await uploadToS3(selectedFile, 'image') : null\n                    })\n                    break;\n\n                default:\n                    break;\n            }\n\n            if (response.status === 200 && !response.data.errors) {\n                setDescription('');\n                setSelectedFile(null);\n                setPreviewUrl(null);\n                setCommentsChanged(!commentsChanged);\n            }\n            else if (response.status === 400) {\n                alert('לא הצלחתי להוסיף את התגובה שלך. אנא נסה שוב!');\n            }\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    useEffect(() => {\n        (async () => {\n            try {\n                if (!selectedDiscussion) return;\n                let response, currentComments = [];\n                switch (type) {\n                    case 'course':\n                        response = await getAllCourseDiscussionComments();\n                        currentComments = response.data.data.allCourseComments.nodes.filter(a_comment =>\n                            a_comment.did === selectedDiscussion[0]?.id)\n                        break;\n                    case 'exam':\n                        response = await getAllTestDiscussionsComments();\n                        currentComments = response.data.data.allTestComments.nodes.filter(a_comment =>\n                            a_comment?.did === selectedDiscussion[0]?.id && parseInt(a_comment?.tid) === parseInt(IDs.examID));\n                        break;\n                    case 'question':\n                        response = await getAllQuestionDiscussionsComments();\n                        currentComments = response.data.data.allQuestionComments.nodes.filter(a_comment =>\n                            a_comment?.did === selectedDiscussion[0]?.id)\n                        break;\n                    default:\n                        break;\n                }\n                setComments(currentComments);\n            }\n            catch (error) {\n                console.log(error);\n            }\n        })()\n    }, [commentsChanged, selectedDiscussion])\n\n    const checkUserName = (id) => {\n        let userName;\n        if (!isLoading) {\n            users.forEach(user => {\n                if (user.id === id) userName = `${user.firstname}_${user.lastname}`\n\n            });\n            return userName;\n        }\n\n    }\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (onScreenClick.current && !onScreenClick.current.contains(event.target)) {\n                setIsImageDisplayed(null);\n            }\n        }\n        document.addEventListener('mousedown', handleClickOutside)\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [onScreenClick])\n\n    const dateToString = (date) => {\n        const [year, month, day] = date.split('-');\n        console.log(year, month, day)\n        return `${day}/${month}/${year}`\n    }\n\n    return (\n        <div ref={onScreenClick}>\n            {isImageDisplayed && <div className='flex z-50  flex-col items-center w-screen h-screen fixed top-0 left-0 justify-center '>\n                <img className=\"h-screen p-10 object-contain \" src={isImageDisplayed} alt='' />\n            </div>}\n            <div className=\"relative  dark:text-white w-full dark:bg-gray-900 dark:bg-opacity-20 \">\n                <div className=\"dark:bg-transparent mb-3 py-3 px-5 rounded-t-xl bg-purple-200\">\n                    <h3 className=\"text-xl font-bold\">{selectedDiscussion[1] + \". \" + selectedDiscussion[0].title}</h3>\n                    <p onClick={() => setSelectedDiscussion(null)} className=\"text-center absolute -top-3 text-white -left-3 w-8 h-8 bg-indigo-600 hover:bg-indigo-700 rounded-full text-xl cursor-pointer\">&times;</p>\n                    <div className=\" flex flex-col justify-center \">\n                        <p className=\"text-right mt-3 break-words\">{selectedDiscussion[0].body}</p>\n                        {selectedDiscussion[0].attachment && <img className=\"object-contain rounded-xl cursor-pointer w-44 m-3 shadow\" onClick={() => setIsImageDisplayed(selectedDiscussion[0].attachment)} src={selectedDiscussion[0].attachment} />}\n                    </div>\n                    <div className=\"flex justify-around items-center mt-7\">\n                        <p dir=\"ltr\" className=\"text-sm font-semibold\">@{checkUserName(selectedDiscussion[0].uid)}</p>\n                        <div className=\"flex items-center\">\n                            <p className=\"mx-2 text-sm\">{dateToString(selectedDiscussion[0].createdAt.split(\"T\")[0])}</p>\n                            {/* <p className=\"mx-2 text-sm\">{(new Date(selectedDiscussion[0].createdAt).toString().split(\"GMT\")[0])}</p> */}\n                        </div>\n                    </div>\n                </div>\n                <Comments onScreenClick={onScreenClick} setIsImageDisplayed={setIsImageDisplayed} comments={comments} />\n                <div className=\"mt-1 flex w-full px-2 items-center\">\n                    <div className=\" \">\n                        {!previewUrl ? <label htmlFor=\"file-upload\" className=\"relative cursor-pointer dark:bg-gray-800 rounded-md font-medium text-indigo-600 hover:text-indigo-500 \">\n                            <PaperClipIcon data-tip data-for=\"attachmentTip\" className=\"h-8 w-8  cursor-pointer text-indigo-600 hover:text-indigo-700\" />\n                            <ReactTooltip id=\"attachmentTip\" className=\"text-center\" place=\"bottom\" effect=\"solid\">צרף תמונה</ReactTooltip>\n                            <input id=\"file-upload\" name=\"file-upload\" type=\"file\" className=\"sr-only\" onChange={(e) => addAttachment(e)} />\n                        </label>\n                            :\n                            <div className=\"relative flex justify-center items-center w-24 h-24\">\n                                <img className=\"object-contain shadow rounded-xl\" src={previewUrl} />\n                                <XIcon className=\"absolute top-3 right-0 transform dark:text-gray-400 dark:bg-gray-800 translate-x-1/2 -translate-y-1/2 h-6 w-6 bg-gray-200 text-indigo-600 hover:text-indigo-500 cursor-pointer border-dashed border-2 border-gray-400 rounded-full p-1\" onClick={() => { setPreviewUrl(null); setSelectedFile(null) }} />\n                            </div>}\n\n                    </div>\n                    <TextArea text={'נו תגיב משהו:'} description={description} setDescription={setDescription} rows={2} />\n                    <div className=\"\">\n                        <PaperAirplaneIcon className=\"h-9 w-9 cursor-pointer transform -rotate-90 text-indigo-600 hover:text-indigo-700\"\n                            onClick={() => pushComment()} />\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\nexport default Discussion"]},"metadata":{},"sourceType":"module"}