{"ast":null,"code":"import { getAllUsersQuery, createUserQuery, updateUserQuery, createUserCourseQurey, getAllUserCoursesQuery, deleteUserCourseQurey } from '../Queries/userQueries';\nimport axios from 'axios';\nexport const getAllUsers = () => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: getAllUsersQuery,\n    variables: {}\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const createUser = object => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: createUserQuery,\n    variables: object\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log('could not create a user', error);\n  });\n}; // export const updateUser = (userData) => {\n//     axios.post('http://localhost:5000/graphql', {\n//         query: updateUserQuery,\n//         variables: {...userData}\n//       })\n//       .then(function (response) {\n//         console.log(response);\n//       })\n//       .catch(function (error) {\n//         console.log(error);\n//       });\n// }\n// // From here - the updated queries!!! all of the abve - examples !!!!!!!\n\nexport const getAllUserCourses = () => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: getAllUserCoursesQuery,\n    variables: {}\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const createUserCourse = object => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: createUserCourseQurey,\n    variables: object\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const deleteUserCourse = object => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: deleteUserCourseQurey,\n    variables: object\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["C:/Users/avikef/Desktop/New folder (10)/src/API/usersApi.js"],"names":["getAllUsersQuery","createUserQuery","updateUserQuery","createUserCourseQurey","getAllUserCoursesQuery","deleteUserCourseQurey","axios","getAllUsers","post","query","variables","then","response","catch","error","console","log","createUser","object","getAllUserCourses","createUserCourse","deleteUserCourse"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,eAA3B,EAA4CC,eAA5C,EAA6DC,qBAA7D,EAAmFC,sBAAnF,EAA2GC,qBAA3G,QAAwI,wBAAxI;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAOD,KAAK,CAACE,IAAN,CAAW,+BAAX,EAA4C;AACjDC,IAAAA,KAAK,EAAET,gBAD0C;AAEjDU,IAAAA,SAAS,EAAE;AAFsC,GAA5C,EAIJC,IAJI,CAIC,UAAUC,QAAV,EAAoB;AACxB,WAAOA,QAAP;AACD,GANI,EAOJC,KAPI,CAOE,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GATI,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMG,UAAU,GAAIC,MAAD,IAAY;AACpC,SAAOZ,KAAK,CAACE,IAAN,CAAW,+BAAX,EAA4C;AACjDC,IAAAA,KAAK,EAAER,eAD0C;AAEjDS,IAAAA,SAAS,EAAEQ;AAFsC,GAA5C,EAIJP,IAJI,CAIC,UAAUC,QAAV,EAAoB;AACxB,WAAOA,QAAP;AACD,GANI,EAOJC,KAPI,CAOE,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD,GATI,CAAP;AAUD,CAXM,C,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,MAAMK,iBAAiB,GAAG,MAAM;AACrC,SAAOb,KAAK,CAACE,IAAN,CAAW,+BAAX,EAA4C;AACjDC,IAAAA,KAAK,EAAEL,sBAD0C;AAEjDM,IAAAA,SAAS,EAAE;AAFsC,GAA5C,EAIJC,IAJI,CAIC,UAAUC,QAAV,EAAoB;AACxB,WAAOA,QAAP;AACD,GANI,EAOJC,KAPI,CAOE,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GATI,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMM,gBAAgB,GAAIF,MAAD,IAAY;AAC1C,SAAOZ,KAAK,CAACE,IAAN,CAAW,+BAAX,EAA4C;AACjDC,IAAAA,KAAK,EAAEN,qBAD0C;AAEjDO,IAAAA,SAAS,EAAEQ;AAFsC,GAA5C,EAIJP,IAJI,CAIC,UAAUC,QAAV,EAAoB;AACxB,WAAOA,QAAP;AACD,GANI,EAOJC,KAPI,CAOE,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GATI,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMO,gBAAgB,GAAIH,MAAD,IAAY;AAC1C,SAAOZ,KAAK,CAACE,IAAN,CAAW,+BAAX,EAA4C;AAC/CC,IAAAA,KAAK,EAAEJ,qBADwC;AAE/CK,IAAAA,SAAS,EAAEQ;AAFoC,GAA5C,EAIJP,IAJI,CAIC,UAAUC,QAAV,EAAoB;AACzB,WAAOA,QAAP;AACA,GANI,EAOJC,KAPI,CAOE,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GATI,CAAP;AAUD,CAXM","sourcesContent":["import { getAllUsersQuery, createUserQuery, updateUserQuery, createUserCourseQurey,getAllUserCoursesQuery, deleteUserCourseQurey } from '../Queries/userQueries'\nimport axios from 'axios'\n\nexport const getAllUsers = () => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: getAllUsersQuery,\n    variables: {}\n  })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const createUser = (object) => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: createUserQuery,\n    variables: object,\n  })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log('could not create a user', error);\n    });\n}\n\n// export const updateUser = (userData) => {\n//     axios.post('http://localhost:5000/graphql', {\n//         query: updateUserQuery,\n//         variables: {...userData}\n//       })\n//       .then(function (response) {\n//         console.log(response);\n//       })\n//       .catch(function (error) {\n//         console.log(error);\n//       });\n// }\n\n// // From here - the updated queries!!! all of the abve - examples !!!!!!!\n\nexport const getAllUserCourses = () => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: getAllUserCoursesQuery,\n    variables: {}\n  })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const createUserCourse = (object) => {\n  return axios.post('http://localhost:5000/graphql', {\n    query: createUserCourseQurey,\n    variables: object\n  })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport const deleteUserCourse = (object) => {\n  return axios.post('http://localhost:5000/graphql', {\n      query: deleteUserCourseQurey,\n      variables: object,\n    })\n    .then(function (response) {\n     return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\n"]},"metadata":{},"sourceType":"module"}