{"ast":null,"code":"// Test level queries\nexport const getAllTestDiscussionsQuery = `query MyQuery {\n  allTestDiscussions {\n    nodes {\n      body\n      cid\n      createdAt\n      id\n      nodeId\n      tid\n      title\n      uid\n      updatedAt\n    }\n  }\n}\n\n`;\nexport const getAllTestDiscussionsCommentsQuery = `\nquery MyQuery {\n  allTestComments {\n    nodes {\n      body\n      cid\n      createdAt\n      did\n      id\n      tid\n      uid\n      updatedAt\n      attachment\n    }\n  }\n}\n`;\nexport const getTestNumQuestionsQuery = `{\n    allTests {\n      nodes {\n        id\n        numQuestions\n      }\n    }\n  }`;\nexport const updateTestNumQuestionsQuery = `mutation updateTestById($id:Int!, $numQuestions: Int!) {\n    updateTestById(input:{id : $id , testPatch:{numQuestions: $numQuestions}}\n    ) {\n        test {\n        id\n        numQuestions\n        }\n    }\n}`;\nexport const createTestQuery = `mutation createTest($cid: String!, $year: Int!, $questionsNum: Int!, $semester: String!, $period: String!) {\n  createTest(\n    input: {test: {cid: $cid, year: $year, questionsNum: $questionsNum, semester: $semester, period: $period}}\n  ) {\n    test {\n      id\n    }\n  }\n}\n`;\nexport const createExamQuery = `mutation createExam( $cid: String!, $downloadLink: String!, $tid: Int!, $language: String!) {\n  createExam(input: {exam: {cid: $cid, downloadLink: $downloadLink, tid: $tid, language: $language}}\n    ) {\n      exam {\n        cid\n        downloadLink\n        tid\n        language\n      }\n    } \n}`;\nexport const getAllExamsQuery = `query MyQuery {\n  allExams {\n    nodes {\n      cid\n      downloadLink\n      language\n      id\n      tid\n    }\n  }\n}\n`;\nexport const createSolutionQuery = `mutation createSolution($cid: String!, $downloadLink: String!, $tid: Int!, $grade: Int!) {\n  createSolution(\n    input: {solution: {cid: $cid, downloadLink: $downloadLink, tid: $tid, grade: $grade}}\n  ) {\n    solution {\n      cid\n      downloadLink\n      tid\n      grade\n    }\n  }\n}`;\nexport const getAllSolutionsQuery = `query MyQuery {\n  allSolutions {\n    nodes {\n      cid\n      downloadLink\n      grade\n      id\n      tid\n    }\n  }\n}\n`;\nexport const getAllTestsQuery = `\nquery MyQuery {\n  allTests {\n    nodes {\n      cid\n      id\n      period\n      questionsNum\n      semester\n      year\n    }\n  }\n}\n`;","map":{"version":3,"sources":["C:/Users/avikef/Desktop/New folder (12)/tauoverflow-client/src/Queries/testQueries.js"],"names":["getAllTestDiscussionsQuery","getAllTestDiscussionsCommentsQuery","getTestNumQuestionsQuery","updateTestNumQuestionsQuery","createTestQuery","createExamQuery","getAllExamsQuery","createSolutionQuery","getAllSolutionsQuery","getAllTestsQuery"],"mappings":"AAAA;AAEA,OAAO,MAAMA,0BAA0B,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBO;AAkBP,OAAO,MAAMC,kCAAkC,GAAI;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBO;AAkBP,OAAO,MAAMC,wBAAwB,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,IAPO;AASP,OAAO,MAAMC,2BAA2B,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EARO;AAWP,OAAO,MAAMC,eAAe,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAYP,OAAO,MAAMC,eAAe,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAVO;AAYP,OAAO,MAAMC,gBAAgB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAcP,OAAO,MAAMC,mBAAmB,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAXO;AAaP,OAAO,MAAMC,oBAAoB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAaP,OAAO,MAAMC,gBAAgB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbO","sourcesContent":["// Test level queries\n\nexport const getAllTestDiscussionsQuery = `query MyQuery {\n  allTestDiscussions {\n    nodes {\n      body\n      cid\n      createdAt\n      id\n      nodeId\n      tid\n      title\n      uid\n      updatedAt\n    }\n  }\n}\n\n`\n\nexport const getAllTestDiscussionsCommentsQuery = `\nquery MyQuery {\n  allTestComments {\n    nodes {\n      body\n      cid\n      createdAt\n      did\n      id\n      tid\n      uid\n      updatedAt\n      attachment\n    }\n  }\n}\n`\n\nexport const getTestNumQuestionsQuery = `{\n    allTests {\n      nodes {\n        id\n        numQuestions\n      }\n    }\n  }`\n\nexport const updateTestNumQuestionsQuery = `mutation updateTestById($id:Int!, $numQuestions: Int!) {\n    updateTestById(input:{id : $id , testPatch:{numQuestions: $numQuestions}}\n    ) {\n        test {\n        id\n        numQuestions\n        }\n    }\n}`\n\n\nexport const createTestQuery = `mutation createTest($cid: String!, $year: Int!, $questionsNum: Int!, $semester: String!, $period: String!) {\n  createTest(\n    input: {test: {cid: $cid, year: $year, questionsNum: $questionsNum, semester: $semester, period: $period}}\n  ) {\n    test {\n      id\n    }\n  }\n}\n`\n\n\nexport const createExamQuery = `mutation createExam( $cid: String!, $downloadLink: String!, $tid: Int!, $language: String!) {\n  createExam(input: {exam: {cid: $cid, downloadLink: $downloadLink, tid: $tid, language: $language}}\n    ) {\n      exam {\n        cid\n        downloadLink\n        tid\n        language\n      }\n    } \n}`\n\nexport const getAllExamsQuery = `query MyQuery {\n  allExams {\n    nodes {\n      cid\n      downloadLink\n      language\n      id\n      tid\n    }\n  }\n}\n`\n\n\nexport const createSolutionQuery = `mutation createSolution($cid: String!, $downloadLink: String!, $tid: Int!, $grade: Int!) {\n  createSolution(\n    input: {solution: {cid: $cid, downloadLink: $downloadLink, tid: $tid, grade: $grade}}\n  ) {\n    solution {\n      cid\n      downloadLink\n      tid\n      grade\n    }\n  }\n}`\n\nexport const getAllSolutionsQuery = `query MyQuery {\n  allSolutions {\n    nodes {\n      cid\n      downloadLink\n      grade\n      id\n      tid\n    }\n  }\n}\n`\n\nexport const getAllTestsQuery = `\nquery MyQuery {\n  allTests {\n    nodes {\n      cid\n      id\n      period\n      questionsNum\n      semester\n      year\n    }\n  }\n}\n`"]},"metadata":{},"sourceType":"module"}