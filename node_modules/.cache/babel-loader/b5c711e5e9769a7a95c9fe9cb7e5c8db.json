{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avikef\\\\Desktop\\\\New folder (12)\\\\tauoverflow-client\\\\src\\\\components\\\\course-header\\\\CourseHeader.js\",\n    _s = $RefreshSig$();\n\nimport H2 from \"../../general-components/H2\";\nimport H4 from \"../../general-components/H4\";\nimport Button from \"../../general-components/Button\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { getAllUserCourses, deleteUserCourse, createUserCourse } from \"../../API/usersApi\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { TrashIcon, FolderAddIcon, StarIcon } from '@heroicons/react/outline';\nimport ReactTooltip from \"react-tooltip\";\nimport DropDownList from \"../../general-components/DropDownList\";\nimport { updateQuestionUserRate } from \"../../API/questionApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseHeader = _ref => {\n  _s();\n\n  let {\n    avgVote,\n    hasUserVoted,\n    userRate,\n    setUserRate,\n    setIsListUpdated,\n    isListUpdated,\n    addToFav,\n    setPopupType,\n    isPopupOpen,\n    setIsPopupOpen,\n    courseName,\n    examID,\n    questionNum,\n    discussionBTN,\n    filesUploadBTN\n  } = _ref;\n  const {\n    user,\n    isLoading\n  } = useAuth0();\n  const [userCourses, setUserCourses] = useState([]);\n  const [doesInclude, setDoesInclude] = useState(false);\n  const [changeQuestionRating, setChangeQuestionRating] = useState(false);\n  const IDs = useParams(); // console.log('questionNum', questionNum, 'avgVote', avgVote, 'userRate', userRate)\n\n  const updateQuestionRating = async rating => {\n    setChangeQuestionRating(false);\n    const response = await updateQuestionUserRate({\n      qnum: parseInt(questionNum),\n      tid: parseInt(IDs.examID),\n      uid: user.sub.split(\"|\")[1].toString(),\n      personalRate: rating\n    });\n    setUserRate(rating); // update avarage difficulty\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (!isLoading) {\n          if (user) {\n            var _response$data, _response$data$data, _response$data$data$a;\n\n            const response = await getAllUserCourses();\n            const allUserCourses = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : (_response$data$data$a = _response$data$data.allUserCourses) === null || _response$data$data$a === void 0 ? void 0 : _response$data$data$a.nodes;\n            setUserCourses(allUserCourses.filter(course => course.uid === user.sub.split(\"|\")[1]));\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [isLoading]);\n  useEffect(() => {\n    for (let course of userCourses) {\n      if (course.cid === IDs.courseID) {\n        setDoesInclude(true);\n        return;\n      }\n\n      ;\n    }\n\n    setDoesInclude(false);\n  }, [userCourses]);\n\n  const editCourseList = async type => {\n    // add object to the list and check if it has more than 10 inside of it\n    if (type === 'add') {\n      const response = await getAllUserCourses();\n\n      if (response.data.data.allUserCourses.nodes.filter(course => course.uid === user.sub.split(\"|\")[1]).length >= 10) {\n        alert(\"הגעת למקסימום הקורסים שניתן לעקוב אחריהם\");\n        return;\n      } else {\n        const response = await createUserCourse({\n          \"uid\": user.sub.split(\"|\")[1],\n          \"cid\": IDs.courseID\n        });\n        if (response.status === 200) alert('קורס זה נוסף בהצלחה!');\n      }\n    } // remove object from the list\n    else {\n      const response = await deleteUserCourse({\n        \"uid\": user.sub.split(\"|\")[1],\n        \"cid\": IDs.courseID\n      });\n      if (response.status === 200 && !response.data.error) alert('קורס זה נמחק בהצלחה!');\n    } // this way or another, fetch the new table to refresh the web\n\n\n    const response = await getAllUserCourses();\n    setUserCourses(response.data.data.allUserCourses.nodes.filter(course => course.uid === user.sub.split(\"|\")[1]));\n    setIsListUpdated(!isListUpdated);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full sm:flex-row items-center justify-between mb-5 border-b py-2 dark:border-gray-600 pr-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" text-indigo-600 text-right flex flex-col items-start\",\n      children: [courseName && /*#__PURE__*/_jsxDEV(H2, {\n        text: 'שם הקורס: ' + courseName,\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 32\n      }, this), examID && /*#__PURE__*/_jsxDEV(H2, {\n        text: `שנה: ${examID.year}, סמסטר: ${examID.semester}, מועד: ${examID.period}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 28\n      }, this), questionNum && /*#__PURE__*/_jsxDEV(H2, {\n        text: 'מספר שאלה: ' + questionNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }, this), questionNum && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setChangeQuestionRating(!changeQuestionRating);\n        },\n        className: `select-none flex relative justify-center items-center pb-1 rounded-md cursor-pointer `,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: `-mr-2 px-2 text-2xl font-bold rounded-lg dark:text-white ${changeQuestionRating ? 'bg-indigo-600 text-white' : 'text-indigo-600'}`,\n          children: [\"\\u05E8\\u05DE\\u05EA \\u05D4\\u05E7\\u05D5\\u05E9\\u05D9 \\u05E9\\u05D1\\u05D7\\u05E8\\u05EA: \", parseInt(userRate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: changeQuestionRating && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"bg-indigo-600 w-full text-white absolute left-0 top-9 rounded-lg z-10\",\n            children: [...Array(5)].map((el, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => updateQuestionRating(index + 1),\n              className: `px-4 my-1 text-center hover:bg-indigo-400 cursor-pointer rounded-md ${parseInt(userRate) === index + 1 ? 'text-xl font-bold bg-indigo-500' : 'null'}`,\n              children: index + 1\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 63\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex my-2\",\n      children: [!hasUserVoted && IDs.questionID && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex my-2 flex-col items-center justify-center  px-1 rounded-xl \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center\",\n          children: /*#__PURE__*/_jsxDEV(DropDownList, {\n            noTitle: true,\n            text: 'רמת קושי',\n            object: userRate,\n            setObject: setUserRate,\n            list: [1, 2, 3, 4, 5]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), addToFav && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: [doesInclude && /*#__PURE__*/_jsxDEV(TrashIcon, {\n          \"data-tip\": true,\n          \"data-for\": \"included\",\n          className: \"w-7 h-7 mx-4 text-indigo-700\",\n          onClick: () => editCourseList('remove')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }, this), !doesInclude && /*#__PURE__*/_jsxDEV(FolderAddIcon, {\n          \"data-tip\": true,\n          \"data-for\": \"excluded\",\n          className: \"w-7 h-7 mx-4 text-indigo-700\",\n          onClick: () => editCourseList('add')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row items-center justify-start\",\n        children: [hasUserVoted && IDs.questionID && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center justify-center bg-indigo-600 py-2 rounded-lg px-3\",\n          children: questionNum && avgVote !== NaN && avgVote !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white font-semibold\",\n            children: `רמת קושי ממוצעת: ${avgVote}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 81\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), discussionBTN && /*#__PURE__*/_jsxDEV(Button, {\n          text: discussionBTN,\n          isPopupOpen: isPopupOpen,\n          setIsPopupOpen: setIsPopupOpen,\n          setPopupType: setPopupType,\n          type: \"discussion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 39\n        }, this), filesUploadBTN && /*#__PURE__*/_jsxDEV(Button, {\n          text: filesUploadBTN,\n          isPopupOpen: isPopupOpen,\n          setIsPopupOpen: setIsPopupOpen,\n          setPopupType: setPopupType,\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CourseHeader, \"uFeagcorVEkLYLC2U85gh/RlRIg=\", false, function () {\n  return [useAuth0, useParams];\n});\n\n_c = CourseHeader;\nexport default CourseHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseHeader\");","map":{"version":3,"sources":["C:/Users/avikef/Desktop/New folder (12)/tauoverflow-client/src/components/course-header/CourseHeader.js"],"names":["H2","H4","Button","useAuth0","getAllUserCourses","deleteUserCourse","createUserCourse","useEffect","useState","useParams","TrashIcon","FolderAddIcon","StarIcon","ReactTooltip","DropDownList","updateQuestionUserRate","CourseHeader","avgVote","hasUserVoted","userRate","setUserRate","setIsListUpdated","isListUpdated","addToFav","setPopupType","isPopupOpen","setIsPopupOpen","courseName","examID","questionNum","discussionBTN","filesUploadBTN","user","isLoading","userCourses","setUserCourses","doesInclude","setDoesInclude","changeQuestionRating","setChangeQuestionRating","IDs","updateQuestionRating","rating","response","qnum","parseInt","tid","uid","sub","split","toString","personalRate","allUserCourses","data","nodes","filter","course","error","console","log","cid","courseID","editCourseList","type","length","alert","status","year","semester","period","Array","map","el","index","questionID","NaN"],"mappings":"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","sourcesContent":["import H2 from \"../../general-components/H2\"\nimport H4 from \"../../general-components/H4\"\nimport Button from \"../../general-components/Button\"\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { getAllUserCourses, deleteUserCourse, createUserCourse } from \"../../API/usersApi\"\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { TrashIcon, FolderAddIcon, StarIcon } from '@heroicons/react/outline'\nimport ReactTooltip from \"react-tooltip\";\nimport DropDownList from \"../../general-components/DropDownList\";\nimport { updateQuestionUserRate } from \"../../API/questionApi\";\n\nconst CourseHeader = ({ avgVote, hasUserVoted, userRate, setUserRate, setIsListUpdated, isListUpdated, addToFav, setPopupType, isPopupOpen, setIsPopupOpen, courseName, examID, questionNum, discussionBTN, filesUploadBTN }) => {\n    const { user, isLoading } = useAuth0();\n    const [userCourses, setUserCourses] = useState([]);\n    const [doesInclude, setDoesInclude] = useState(false);\n    const [changeQuestionRating, setChangeQuestionRating] = useState(false);\n    const IDs = useParams();\n\n    // console.log('questionNum', questionNum, 'avgVote', avgVote, 'userRate', userRate)\n\n    const updateQuestionRating = async (rating) => {\n        setChangeQuestionRating(false);\n        const response = await updateQuestionUserRate({\n            qnum: parseInt(questionNum),\n            tid: parseInt(IDs.examID),\n            uid: user.sub.split(\"|\")[1].toString(),\n            personalRate: rating\n        });\n        setUserRate(rating)\n        // update avarage difficulty\n    }\n\n    useEffect(() => {\n        (async () => {\n            try {\n                if (!isLoading) {\n                    if (user) {\n                        const response = await getAllUserCourses();\n                        const allUserCourses = response?.data?.data?.allUserCourses?.nodes;\n                        setUserCourses(allUserCourses.filter(course =>\n                            course.uid === user.sub.split(\"|\")[1]));\n                    }\n                }\n            }\n            catch (error) {\n                console.log(error);\n            }\n        })();\n    }, [isLoading])\n\n\n    useEffect(() => {\n        for (let course of userCourses) {\n            if (course.cid === IDs.courseID) {\n                setDoesInclude(true);\n                return;\n            };\n        }\n        setDoesInclude(false);\n    }, [userCourses])\n\n    const editCourseList = async (type) => {\n        // add object to the list and check if it has more than 10 inside of it\n        if (type === 'add') {\n            const response = await getAllUserCourses();\n            if (response.data.data.allUserCourses.nodes.filter(course => course.uid === user.sub.split(\"|\")[1]).length >= 10) {\n                alert(\"הגעת למקסימום הקורסים שניתן לעקוב אחריהם\");\n                return;\n            }\n            else {\n                const response = await createUserCourse({\n                    \"uid\": user.sub.split(\"|\")[1],\n                    \"cid\": IDs.courseID\n                });\n                if (response.status === 200) alert('קורס זה נוסף בהצלחה!');\n            }\n        }\n        // remove object from the list\n        else {\n            const response = await deleteUserCourse({\n                \"uid\": user.sub.split(\"|\")[1],\n                \"cid\": IDs.courseID\n            });\n            if (response.status === 200 && !response.data.error) alert('קורס זה נמחק בהצלחה!');\n        }\n        // this way or another, fetch the new table to refresh the web\n        const response = await getAllUserCourses();\n        setUserCourses(response.data.data.allUserCourses.nodes.filter(course => course.uid === user.sub.split(\"|\")[1]));\n        setIsListUpdated(!isListUpdated);\n    }\n\n\n    return (\n        <div className=\"flex flex-col w-full sm:flex-row items-center justify-between mb-5 border-b py-2 dark:border-gray-600 pr-3\">\n            {/* course, exam, question info */}\n            <div className=\" text-indigo-600 text-right flex flex-col items-start\">\n                {courseName && <H2 text={'שם הקורס: ' + courseName} className=\"\" />}\n                {examID && <H2 text={`שנה: ${examID.year}, סמסטר: ${examID.semester}, מועד: ${examID.period}`} />}\n                {questionNum && <H2 text={'מספר שאלה: ' + questionNum} />}\n                {questionNum && <div onClick={() => { setChangeQuestionRating(!changeQuestionRating) }} className={`select-none flex relative justify-center items-center pb-1 rounded-md cursor-pointer `}>\n                    <p className={`-mr-2 px-2 text-2xl font-bold rounded-lg dark:text-white ${changeQuestionRating ? 'bg-indigo-600 text-white' : 'text-indigo-600'}`}>רמת הקושי שבחרת: {parseInt(userRate)}</p>\n                    <div>\n                        {changeQuestionRating && <ul className=\"bg-indigo-600 w-full text-white absolute left-0 top-9 rounded-lg z-10\">\n                            {[...Array(5)].map((el, index) => <li key={index} onClick={() => updateQuestionRating(index + 1)} className={`px-4 my-1 text-center hover:bg-indigo-400 cursor-pointer rounded-md ${parseInt(userRate) === index + 1 ? 'text-xl font-bold bg-indigo-500' : 'null'}`}>{index + 1}</li>)}\n                        </ul>}\n                    </div>\n                </div>}\n            </div>\n            {/* question rating */}\n\n            {/* buttons info */}\n            <div className=\"flex my-2\">\n                {!hasUserVoted && IDs.questionID &&\n                    <div className=\"flex my-2 flex-col items-center justify-center  px-1 rounded-xl \">\n                        <div className=\"flex justify-center items-center\">\n                            <DropDownList noTitle={true} text={'רמת קושי'} object={userRate} setObject={setUserRate} list={[1, 2, 3, 4, 5]} />\n                        </div>\n                    </div>}\n                {addToFav && <div className=\"flex items-center justify-center\">\n                    {doesInclude && <TrashIcon data-tip data-for=\"included\" className=\"w-7 h-7 mx-4 text-indigo-700\" onClick={() => editCourseList('remove')} />}\n                    {!doesInclude && <FolderAddIcon data-tip data-for=\"excluded\" className=\"w-7 h-7 mx-4 text-indigo-700\" onClick={() => editCourseList('add')} />}\n                </div>}\n                <div className=\"flex flex-col md:flex-row items-center justify-start\">\n                    {hasUserVoted && IDs.questionID &&\n                        <div className=\"flex flex-col items-center justify-center bg-indigo-600 py-2 rounded-lg px-3\">\n                            {questionNum && avgVote !== NaN && avgVote !== 0 && <p className=\"text-white font-semibold\">{`רמת קושי ממוצעת: ${avgVote}`}</p> }\n                        </div>}\n                    {discussionBTN && <Button text={discussionBTN} isPopupOpen={isPopupOpen} setIsPopupOpen={setIsPopupOpen} setPopupType={setPopupType} type={\"discussion\"} />}\n                    {filesUploadBTN && <Button text={filesUploadBTN} isPopupOpen={isPopupOpen} setIsPopupOpen={setIsPopupOpen} setPopupType={setPopupType} type={\"file\"} />}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default CourseHeader"]},"metadata":{},"sourceType":"module"}