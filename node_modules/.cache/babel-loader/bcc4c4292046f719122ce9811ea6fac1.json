{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avikef\\\\Desktop\\\\New folder (10)\\\\src\\\\pages\\\\SelectCourses.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport DropDownList from \"../general-components/DropDownList\";\nimport { getAllFaculties } from '../API/facultyApi';\nimport { getAllDepartments, getAllCoursesInDepartments } from '../API/departmentApi';\nimport { getAllCourses } from '../API/courseApi';\nimport Input from \"../general-components/Input\";\nimport H1 from \"../general-components/H1\";\nimport H3 from \"../general-components/H3\";\nimport Button from \"../general-components/Button\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { createUserCourse } from \"../API/usersApi\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectCourses = () => {\n  _s();\n\n  const MAX_COUNT = 10; // check if ddl is changed\n\n  const [isDDL1changed, setIsDDL1changed] = useState(null);\n  const [isDDL2changed, setIsDDL2changed] = useState(null);\n  const [isDDL3changed, setIsDDL3changed] = useState(null); // lists of all sections in the university\n\n  const [faculties, setFaculties] = useState([]);\n  const [deparments, setDepartments] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [coursesInDepartments, setCoursesInDepartments] = useState([]);\n  const [selectedValues, setSelectedValues] = useState([]);\n  const [countInputs, setCountInputs] = useState(MAX_COUNT); // user data\n\n  const {\n    user\n  } = useAuth0();\n  const navigate = useNavigate();\n  useEffect(() => {\n    (async () => {\n      try {\n        const facList = getAllFaculties();\n        const dptList = getAllDepartments();\n        const crsList = getAllCourses();\n        const cidList = getAllCoursesInDepartments();\n        Promise.all([facList, dptList, crsList, cidList]).then(values => {\n          setFaculties(values[0].data.data.allFaculties.nodes);\n          setDepartments(values[1].data.data.allDepartments.nodes);\n          setCourses(values[2].data.data.allCourses.nodes);\n          setCoursesInDepartments(values[3].data.data.allCoursesInDepartments.nodes);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    setIsDDL2changed(null);\n    setIsDDL3changed(null);\n  }, [isDDL1changed]);\n  useEffect(() => {\n    if (isDDL2changed !== null) setIsDDL3changed(true);else setIsDDL3changed(null);\n  }, [isDDL2changed]);\n\n  const createList = (value, type) => {\n    let list = [];\n\n    switch (type) {\n      case 'faculty':\n        value.forEach(item => list.push({\n          id: item.id,\n          name: item.hebrewName\n        }));\n        break;\n\n      case 'department':\n        value.forEach(item => {\n          if (item.facultyId.toString() === isDDL1changed) list.push({\n            id: item.id,\n            name: item.hebrewName\n          });\n        });\n        break;\n\n      case 'course':\n        // check which courses are in this specific department\n        let coursesList = [];\n        coursesInDepartments.forEach(item => {\n          if (item.departmentId.toString() === isDDL2changed) coursesList.push(item.courseId);\n        }); // filter all the courses and keep only the ones that match\n\n        value.forEach(item => {\n          if (coursesList.includes(item.id)) list.push({\n            id: item.id,\n            name: item.name\n          });\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    return list;\n  };\n\n  const setSelections = e => {\n    let selectedCourses = selectedValues;\n\n    if (e.target.checked) {\n      // too many courses were selected\n      if (selectedCourses.length >= MAX_COUNT) {\n        alert('too many courses');\n        e.target.checked = false;\n        return;\n      } // add this course to selectedCourses list;\n\n\n      selectedCourses.push(e.target.value);\n      setCountInputs(countInputs - 1);\n    } else {\n      // remove this course from selectedCourses list;\n      const index = selectedCourses.indexOf(e.target.value);\n\n      if (index > -1) {\n        selectedCourses.splice(index, 1);\n        setCountInputs(countInputs + 1);\n      }\n    }\n\n    setSelectedValues(selectedCourses);\n  };\n\n  const checkIfIncludes = courseID => {\n    return selectedValues.includes(courseID);\n  };\n\n  const renderCoursesInputs = list => {\n    return list.map((course, index) => /*#__PURE__*/_jsxDEV(Input, {\n      isChecked: checkIfIncludes(course.id),\n      text: course.name,\n      value: course.id,\n      type: 'checkbox',\n      courseSelection: true,\n      setInputValue: setSelections\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 44\n    }, this));\n  };\n\n  const saveCourses = async () => {\n    for (let courseID of selectedValues) {\n      await createUserCourse({\n        \"uid\": user.sub.split(\"|\")[1],\n        \"cid\": courseID\n      });\n    } // navigate('/');\n\n\n    window.location.replace(`/`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    dir: \"rtl\",\n    className: \"flex flex-col my-6 items-center bg-indigo-50 mx-10 rounded-xl shadow\",\n    children: [/*#__PURE__*/_jsxDEV(H1, {\n      text: 'סנן קורסים שרלוונטים אליך כדי לקצר את תהליך החיפוש שלך'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex my-6\",\n      children: [/*#__PURE__*/_jsxDEV(DropDownList, {\n        text: 'פקולטה',\n        list: createList(faculties, 'faculty'),\n        object: isDDL1changed,\n        setObject: setIsDDL1changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownList, {\n        text: 'חוג',\n        list: createList(deparments, 'department'),\n        object: isDDL2changed,\n        setObject: setIsDDL2changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), isDDL3changed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center\",\n        children: [/*#__PURE__*/_jsxDEV(H3, {\n          text: `בחר עד ${MAX_COUNT} קורסים (${countInputs} נותרו)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          clickHandler: saveCourses,\n          text: 'שמור'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex p-5 mx-10 flex-col items-start\",\n        children: renderCoursesInputs(createList(courses, 'course'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectCourses, \"6PgNFG5OKJhZ8bRuo3+bLsle3Wc=\", false, function () {\n  return [useAuth0, useNavigate];\n});\n\n_c = SelectCourses;\nexport default SelectCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCourses\");","map":{"version":3,"sources":["C:/Users/avikef/Desktop/New folder (10)/src/pages/SelectCourses.js"],"names":["useState","useEffect","DropDownList","getAllFaculties","getAllDepartments","getAllCoursesInDepartments","getAllCourses","Input","H1","H3","Button","useAuth0","createUserCourse","useNavigate","SelectCourses","MAX_COUNT","isDDL1changed","setIsDDL1changed","isDDL2changed","setIsDDL2changed","isDDL3changed","setIsDDL3changed","faculties","setFaculties","deparments","setDepartments","courses","setCourses","coursesInDepartments","setCoursesInDepartments","selectedValues","setSelectedValues","countInputs","setCountInputs","user","navigate","facList","dptList","crsList","cidList","Promise","all","then","values","data","allFaculties","nodes","allDepartments","allCourses","allCoursesInDepartments","error","console","log","createList","value","type","list","forEach","item","push","id","name","hebrewName","facultyId","toString","coursesList","departmentId","courseId","includes","setSelections","e","selectedCourses","target","checked","length","alert","index","indexOf","splice","checkIfIncludes","courseID","renderCoursesInputs","map","course","saveCourses","sub","split","window","location","replace"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport DropDownList from \"../general-components/DropDownList\"\r\nimport { getAllFaculties } from '../API/facultyApi'\r\nimport { getAllDepartments, getAllCoursesInDepartments } from '../API/departmentApi'\r\nimport { getAllCourses } from '../API/courseApi'\r\nimport Input from \"../general-components/Input\";\r\nimport H1 from \"../general-components/H1\";\r\nimport H3 from \"../general-components/H3\";\r\nimport Button from \"../general-components/Button\";\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { createUserCourse } from \"../API/usersApi\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SelectCourses = () => {\r\n    const MAX_COUNT = 10;\r\n\r\n    // check if ddl is changed\r\n    const [isDDL1changed, setIsDDL1changed] = useState(null);\r\n    const [isDDL2changed, setIsDDL2changed] = useState(null);\r\n    const [isDDL3changed, setIsDDL3changed] = useState(null);\r\n\r\n    // lists of all sections in the university\r\n    const [faculties, setFaculties] = useState([]);\r\n    const [deparments, setDepartments] = useState([]);\r\n    const [courses, setCourses] = useState([]);\r\n    const [coursesInDepartments, setCoursesInDepartments] = useState([]);\r\n    const [selectedValues, setSelectedValues] = useState([])\r\n    const [countInputs, setCountInputs] = useState(MAX_COUNT);\r\n\r\n    // user data\r\n    const { user } = useAuth0();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const facList = getAllFaculties();\r\n                const dptList = getAllDepartments();\r\n                const crsList = getAllCourses();\r\n                const cidList = getAllCoursesInDepartments();\r\n                Promise.all([facList, dptList, crsList, cidList]).then(values => {\r\n                    setFaculties(values[0].data.data.allFaculties.nodes);\r\n                    setDepartments(values[1].data.data.allDepartments.nodes);\r\n                    setCourses(values[2].data.data.allCourses.nodes);\r\n                    setCoursesInDepartments(values[3].data.data.allCoursesInDepartments.nodes)\r\n                })\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setIsDDL2changed(null);\r\n        setIsDDL3changed(null);\r\n    }, [isDDL1changed])\r\n\r\n    useEffect(() => {\r\n        if (isDDL2changed !== null) setIsDDL3changed(true);\r\n        else setIsDDL3changed(null);\r\n    }, [isDDL2changed])\r\n\r\n    const createList = (value, type) => {\r\n        let list = [];\r\n        switch (type) {\r\n            case 'faculty':\r\n                value.forEach(item => list.push({ id: item.id, name: item.hebrewName }))\r\n                break;\r\n            case 'department':\r\n                value.forEach(item => {\r\n                    if (item.facultyId.toString() === isDDL1changed) list.push({ id: item.id, name: item.hebrewName })\r\n                })\r\n                break;\r\n            case 'course':\r\n                // check which courses are in this specific department\r\n                let coursesList = []\r\n                coursesInDepartments.forEach(item => {\r\n                    if (item.departmentId.toString() === isDDL2changed) coursesList.push(item.courseId);\r\n                });\r\n                // filter all the courses and keep only the ones that match\r\n                value.forEach(item => {\r\n                    if (coursesList.includes(item.id)) list.push({ id: item.id, name: item.name });\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return list;\r\n    }\r\n\r\n    const setSelections = (e) => {\r\n        let selectedCourses = selectedValues;\r\n        if (e.target.checked) {\r\n            // too many courses were selected\r\n            if (selectedCourses.length >= MAX_COUNT) {\r\n                alert('too many courses');\r\n                e.target.checked = false;\r\n                return;\r\n            }\r\n            // add this course to selectedCourses list;\r\n            selectedCourses.push(e.target.value);\r\n            setCountInputs(countInputs - 1)\r\n        }\r\n        else {\r\n            // remove this course from selectedCourses list;\r\n            const index = selectedCourses.indexOf(e.target.value);\r\n            if (index > -1) {\r\n                selectedCourses.splice(index, 1);\r\n                setCountInputs(countInputs + 1);\r\n            }\r\n        }\r\n        setSelectedValues(selectedCourses);\r\n    }\r\n\r\n    const checkIfIncludes = (courseID) => {\r\n        return selectedValues.includes(courseID);\r\n    }\r\n\r\n    const renderCoursesInputs = (list) => {\r\n        return list.map((course, index) => <Input key={index} isChecked={checkIfIncludes(course.id)} text={course.name} value={course.id} type={'checkbox'} courseSelection={true} setInputValue={setSelections} />)\r\n    }\r\n\r\n    const saveCourses = async () => {\r\n        for (let courseID of selectedValues) {\r\n            await createUserCourse({\r\n                \"uid\": user.sub.split(\"|\")[1],\r\n                \"cid\": courseID\r\n            })\r\n        }\r\n        // navigate('/');\r\n        window.location.replace(`/`);\r\n\r\n    }\r\n\r\n    return (\r\n        <div dir=\"rtl\" className=\"flex flex-col my-6 items-center bg-indigo-50 mx-10 rounded-xl shadow\">\r\n            <H1 text={'סנן קורסים שרלוונטים אליך כדי לקצר את תהליך החיפוש שלך'} />\r\n            <div className=\"flex my-6\">\r\n                <DropDownList text={'פקולטה'} list={createList(faculties, 'faculty')} object={isDDL1changed} setObject={setIsDDL1changed} />\r\n                <DropDownList text={'חוג'} list={createList(deparments, 'department')} object={isDDL2changed} setObject={setIsDDL2changed} />\r\n            </div>\r\n            {isDDL3changed && <div className=\"w-full text-center\">\r\n                <div className=\"flex justify-center items-center\">\r\n                    <H3 text={`בחר עד ${MAX_COUNT} קורסים (${countInputs} נותרו)`} />\r\n                    <Button clickHandler={saveCourses} text={'שמור'} />\r\n                </div>\r\n                <div className=\"flex p-5 mx-10 flex-col items-start\">\r\n                    {renderCoursesInputs(createList(courses, 'course'))}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectCourses\r\n"]},"metadata":{},"sourceType":"module"}