{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avikef\\\\Desktop\\\\New folder (12)\\\\tauoverflow-client\\\\src\\\\pages\\\\course-page\\\\CoursePage.js\",\n    _s = $RefreshSig$();\n\nimport ExamFilter from \"../../components/exam-filter/ExamFilter\";\nimport CourseHeader from \"../../components/course-header/CourseHeader\";\nimport Discussions from \"../../components/discussions/Discussions\";\nimport { getAllCourses } from '../../API/courseApi';\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoursePage = _ref => {\n  _s();\n\n  let {\n    setExamDefenition,\n    setIsListUpdated,\n    isListUpdated,\n    contentUpdated,\n    setPopupType,\n    setIsPopupOpen,\n    isPopupOpen\n  } = _ref;\n  const [courseName, setCourseName] = useState('');\n  const IDs = useParams();\n  useEffect(() => {\n    (async () => {\n      try {\n        var _response$data, _response$data$data, _response$data$data$a;\n\n        setExamDefenition(null);\n        const response = await getAllCourses();\n        const allCourses = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : (_response$data$data$a = _response$data$data.allCourses) === null || _response$data$data$a === void 0 ? void 0 : _response$data$data$a.nodes;\n        allCourses.forEach(course => {\n          if (course.id === IDs.courseID) {\n            setCourseName(course.name);\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    dir: \"rtl\",\n    className: \" flex shadow rounded-lg p-5 flex-col mx-auto my-10 items-center w-screen dark:text-white dark:bg-gray-900 \",\n    children: [/*#__PURE__*/_jsxDEV(CourseHeader, {\n      setIsListUpdated: setIsListUpdated,\n      isListUpdated: isListUpdated,\n      addToFav: true,\n      setPopupType: setPopupType,\n      isPopupOpen: isPopupOpen,\n      setIsPopupOpen: setIsPopupOpen,\n      courseName: courseName,\n      discussionBTN: 'דיון חדש',\n      filesUploadBTN: 'הוסף מבחן'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExamFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex flex-col\",\n      children: /*#__PURE__*/_jsxDEV(Discussions, {\n        type: 'course',\n        contentUpdated: contentUpdated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoursePage, \"znaGcWc5FeOcl9HJGRgQyzyYLIk=\", false, function () {\n  return [useParams];\n});\n\n_c = CoursePage;\nexport default CoursePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursePage\");","map":{"version":3,"sources":["C:/Users/avikef/Desktop/New folder (12)/tauoverflow-client/src/pages/course-page/CoursePage.js"],"names":["ExamFilter","CourseHeader","Discussions","getAllCourses","useEffect","useState","useParams","CoursePage","setExamDefenition","setIsListUpdated","isListUpdated","contentUpdated","setPopupType","setIsPopupOpen","isPopupOpen","courseName","setCourseName","IDs","response","allCourses","data","nodes","forEach","course","id","courseID","name","error","console","log"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,yCAAvB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,MAAMC,UAAU,GAAG,QAAuH;AAAA;;AAAA,MAAtH;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA,gBAArB;AAAuCC,IAAAA,aAAvC;AAAsDC,IAAAA,cAAtD;AAAsEC,IAAAA,YAAtE;AAAoFC,IAAAA,cAApF;AAAoGC,IAAAA;AAApG,GAAsH;AAGtI,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMY,GAAG,GAAGX,SAAS,EAArB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAI;AAAA;;AACAI,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,cAAMU,QAAQ,GAAG,MAAMf,aAAa,EAApC;AACA,cAAMgB,UAAU,GAAGD,QAAH,aAAGA,QAAH,yCAAGA,QAAQ,CAAEE,IAAb,0EAAG,eAAgBA,IAAnB,iFAAG,oBAAsBD,UAAzB,0DAAG,sBAAkCE,KAArD;AACAF,QAAAA,UAAU,CAACG,OAAX,CAAmBC,MAAM,IAAI;AACzB,cAAIA,MAAM,CAACC,EAAP,KAAcP,GAAG,CAACQ,QAAtB,EAAgC;AAC5BT,YAAAA,aAAa,CAACO,MAAM,CAACG,IAAR,CAAb;AACH;AACJ,SAJD;AAKH,OATD,CAUA,OAAOC,KAAP,EAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAdD;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACI;AAAK,IAAA,GAAG,EAAC,KAAT;AAAe,IAAA,SAAS,EAAC,4GAAzB;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,gBAAgB,EAAElB,gBAAhC;AAAkD,MAAA,aAAa,EAAEC,aAAjE;AAAgF,MAAA,QAAQ,EAAE,IAA1F;AAAgG,MAAA,YAAY,EAAEE,YAA9G;AAA4H,MAAA,WAAW,EAAEE,WAAzI;AAAsJ,MAAA,cAAc,EAAED,cAAtK;AAAsL,MAAA,UAAU,EAAEE,UAAlM;AAA8M,MAAA,aAAa,EAAE,UAA7N;AAAyO,MAAA,cAAc,EAAE;AAAzP;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAE,QAAnB;AAA6B,QAAA,cAAc,EAAEJ;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAjCD;;GAAMJ,U;UAIUD,S;;;KAJVC,U;AAkCN,eAAeA,UAAf","sourcesContent":["import ExamFilter from \"../../components/exam-filter/ExamFilter\";\nimport CourseHeader from \"../../components/course-header/CourseHeader\";\nimport Discussions from \"../../components/discussions/Discussions\";\nimport { getAllCourses } from '../../API/courseApi'\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\n\nconst CoursePage = ({ setExamDefenition, setIsListUpdated, isListUpdated, contentUpdated, setPopupType, setIsPopupOpen, isPopupOpen }) => {\n\n\n    const [courseName, setCourseName] = useState('');\n    const IDs = useParams();\n\n    useEffect(() => {\n        (async () => {\n            try {\n                setExamDefenition(null)\n                const response = await getAllCourses();\n                const allCourses = response?.data?.data?.allCourses?.nodes;\n                allCourses.forEach(course => {\n                    if (course.id === IDs.courseID) {\n                        setCourseName(course.name);\n                    }\n                });\n            }\n            catch (error) {\n                console.log(error);\n            }\n        })();\n    }, [])\n\n    return (\n        <div dir='rtl' className=\" flex shadow rounded-lg p-5 flex-col mx-auto my-10 items-center w-screen dark:text-white dark:bg-gray-900 \">\n            <CourseHeader setIsListUpdated={setIsListUpdated} isListUpdated={isListUpdated} addToFav={true} setPopupType={setPopupType} isPopupOpen={isPopupOpen} setIsPopupOpen={setIsPopupOpen} courseName={courseName} discussionBTN={'דיון חדש'} filesUploadBTN={'הוסף מבחן'} />\n            <ExamFilter />\n            <div className=\"w-full flex flex-col\">\n                <Discussions type={'course'} contentUpdated={contentUpdated} />\n            </div>\n        </div>\n    )\n}\nexport default CoursePage"]},"metadata":{},"sourceType":"module"}